- trigger:
    - platform: homeassistant
      event: start
    - platform: time
      at: "00:01:00"
  action:
    - service: calendar.get_events
      data:
        start_date_time: "{{ today_at() }}"
        end_date_time: "{{ today_at('23:59:00') }}"
      target:
        entity_id: calendar.cornerstone_school_events_calendar
      response_variable: agenda
    - service: logbook.log
      data:
        name: "Agenda Debug"
        message: "{{ agenda }}"
  binary_sensor:
    - name: School Holiday
      state: |-
        {% set events = agenda['calendar.cornerstone_school_events_calendar'].events %}
        {% if events is not none and events | count > 0 %}
          {{ '(No School)' in events | map(attribute='summary') | join(' ') | lower }}
        {% else %}
          {{ false }}
        {% endif %}

- trigger:
    - platform: homeassistant
      event: start
    - platform: time
      at: "00:01:00"
  action:
    - service: calendar.get_events
      data:
        start_date_time: "{{ today_at() }}"
        end_date_time: "{{ today_at('23:59:00') }}"
      target:
        entity_id: calendar.family
      response_variable: agenda
    # - service: persistent_notification.create
    #   data:
    #     title: "Calendar Debug"
    #     message: >
    #       Events count: {{ agenda['calendar.family'].events | count }}
    #       Events: {{ agenda['calendar.family'].events | to_json }}
  binary_sensor:
    - name: Piano Lessons
      state: |-
        {% set events = agenda['calendar.family'].events %}
        {% if events is not none and events | count > 0 %}
          {{ 'piano lessons' in events | map(attribute='summary') | join(' ') | lower }}
        {% else %}
          {{ false }}
        {% endif %}
    - name: Art Class
      state: |-
        {% set events = agenda['calendar.family'].events %}
        {% if events is not none and events | count > 0 %}
          {{ 'hongyun art class' in events | map(attribute='summary') | join(' ') | lower }}
        {% else %}
          {{ false }}
        {% endif %}

- binary_sensor:
    - name: "School Year"
      state: >
        {% set today = now().date() %}
        {% set start = today.replace(year=2025, month=8, day=14) %}
        {% set end = today.replace(year=2026, month=6, day=4) %}
        {{ today > start and today < end }}
